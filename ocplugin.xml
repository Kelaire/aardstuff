<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, May 30, 2020, 10:30 AM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "OCepic" generated by Plugin Wizard -->

<muclient>
<plugin
   name="OCepic"
   author="Kelaire"
   id="1ad8cdbb378258e1f343c9d7"
   purpose="Triggers and Aliases to aid in the running of the OC Epic"
   language="Lua"
   save_state="y"
   date_written="2022-01-19 10:28:38"
   requires="5.06"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="n"
   group="OC"
   name="OCTestTrigger"
   match="^You give Ruby of the Court to The Keeper of the Court.$"
   regexp="y"
   script="sigBow"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   match="^You give Sapphire of the Deep to The keeper of the deep.$"
   regexp="y"
   script="sigBow"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   match="^You give Emerald of Passage to The Gatekeeper.$"
   regexp="y"
   script="goDown"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   regexp="y"
   match="^The waters begin to swirl and bubble as (?<MobName>.*) is vanquished!$"
   script="gateAlert"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   regexp="y"
   match="^Asvarien, Lord of the Chosen gives Diamond of the Chosen to (?<PlayerName>.*)\.$"
   script="diamondOC"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   match="^Archmage Zavin gives Ruby of the Court to (?<PlayerName>.*)\.$"
   regexp="y"
   script="rubyOC"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   match="^Lord Protector Arkeld gives Ruby of the Court to (?<PlayerName>.*)\.$"
   regexp="y"
   script="rubyOC"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   match="^D'vinara gives Ruby of the Court to (?<PlayerName>.*)\.$"
   regexp="y"
   script="rubyOC"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   group="OC"
   match="^A Guardian of the Deep gives Sapphire of the Deep to (?<PlayerName>.*)\.$"
   regexp="y"
   script="sapphireOC"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="n"
   name="huntOCTrigger"
   match="^You are certain that a proud warhorse is (?<Direction>.*) from here\.$"
   regexp="y"
   script="groupRename"
   sequence="100"
  >
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="^oc (?<endis>enable|disable)$"
   enabled="y"
   regexp="y"
   script="enableDisable"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc check$"
   enabled="y"
   regexp="y"
   script="isEnabled"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc ecn (?<echanname>.*)$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="setAliasName"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc ecn$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="showAliasName"
   sequence="101"
  >
  </alias>
  <alias
   match="^oc finish$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="finishOC"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc start$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="startOC"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc runes (?<playerName>.*)$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="runesOC"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc newbie$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="newbieOC"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc hunt$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="huntMob"
   sequence="100"
  >
  </alias>
  <alias
   match="^oc help$"
   enabled="y"
   regexp="y"
   group="OCAlias"
   script="helpOC"
   sequence="100"
  >
  </alias>
</aliases>

<script>

<![CDATA[
require "gmcphelper"
local groupName = nil

-- Set the alias name for the leaders epic text alias
function setAliasName(name, line, args)
	newEcn = args.echanname
	SetVariable("epic_channel_name", newEcn)
	ColourNote("Green","","OCPlugin NOTICE: Epic Channel Alias changed to ".. newEcn)
	SaveState()
end

-- Display the epic text alias to the user
function showAliasName()
	curEcn = getAliasName()
	ColourNote("Green","","OCPlugin NOTICE: Epic Channel Alias is ".. curEcn)
end

-- Return the variable that stores the epic text alias
function getAliasName()
	ecn = GetVariable("epic_channel_name") or "gtt"
	return ecn
end

-- Enable or Disable OC trigger group
function enableDisable(name, line, args)
	-- Get the text sent from the alias
	enableFlag = args.endis
	
	-- If user wants to enable
	if enableFlag == "enable" then
		ColourNote("Green","","OCPlugin NOTICE: Enabling OC Trigger Group.")
		EnableTriggerGroup ("OC", true)
		
	-- If user wants to disable
	elseif enableFlag == "disable" then
		ColourNote("Green","","OCPlugin NOTICE: Disabling OC Trigger Group.")
		EnableTriggerGroup ("OC", false)
		
	-- User sent bad data
	else
		ColourNote("Red","","OCPlugin ERROR: "..enableFlag.." is an invalid argument.")
	end
end

-- Check to see if the group is enabled - I am doing this half-assedly....checking a single trigger
function isEnabled()
	-- Check the single named trigger for enabled status
	enabledFlag = GetTriggerInfo("OCTestTrigger", 8)

	-- It's true, so they are enabled
	if enabledFlag == true then
		ColourNote("Green","","OCPlugin NOTICE: Trigger group is ENABLED.")
		
	-- It's false, so they are disabled
	elseif enabledFlag == false then
		ColourNote("Green","","OCPlugin NOTICE: Trigger group is DISABLED.")
		
	-- Honestly, it should only ever return true or false....but just in case....
	else
		ColourNote("Red","","OCPlugin ERROR: You should NEVER see this error..")
	end
end

-- Send the finish message to the group
function finishOC()
	ecn = getAliasName()
	message="Thank you for joining, please pretend to wear your mark at this time. The final command sequence is timed. You need to complete these tasks quickly so you do not get left without a reward."
	message2="Commands: @RWear signet, bow arb, wear signet, nod treasurer"
	
	Execute(ecn .. " " .. message)
	Execute(ecn .. " " .. message2)
	Execute("give diamond keeper")
	groupName = nil
end

function startOC()
	groupLeader = get_info_leader()
	
	if groupLeader == "" then
		Execute("group create NAPS:EDNDS")
		Execute("teb broadcast oc")
	elseif groupLeader == gmcp("char.base.name") then
		Execute("group rename NAPS:EDNDS")
		Execute("teb broadcast oc")
	else
		ColourNote("Red","","OCPlugin ERROR: You are not the leader in your group, dummy!")
	end
end

function get_info_leader()        
	any, p = CallPlugin("3e7dedbe37e44942dd46d264", "gmcpval", "group.leader")        
	return p 
end

-- Send the OC Newbie Message
function newbieOC()
	ecn = getAliasName()
	message = "This is a fast epic: please do not afk or you will be left behind. Directions are in the group name. If you die you will need to get back to the group ASAP - do not heal until you are back with the group. All you need is underwater breathing and detect invis. Wear signet and nod keeper to get past the gates. I do give grace for new runners, but after a few times you are expected to get back to the group quickly upon death. If you are non-responsive I will assume you are afk and move on. Please ask if you have any questions. Please read the guides."
	
	Execute(ecn .. " " .. message)
end

-- Give a group of runes to a player and tell them what to do
function runesOC(name, line, args)
	recipient = args.PlayerName
	Send("give ty " .. recipient)
	Send("give az " .. recipient)
	Send("give giz " .. recipient)
	Send("give vk " .. recipient)
	Send("say Give one rune to Ancient, it will take the rest")
end

-- Sapphire dropped trigger text
function sapphireOC(name, line, args)
	recipient = args.PlayerName
	ecn = getAliasName()
	leader_name = gmcp("char.base.name")
	
	message = recipient .. ", please give " .. leader_name .. " the @RSapphire"
	
	Execute(ecn .. " " .. message)
end

-- Ruby dropped trigger text
function rubyOC(name, line, args)
	recipient = args.PlayerName
	ecn = getAliasName()
	leader_name = gmcp("char.base.name")
	
	message = recipient .. ", please give " .. leader_name .. " the @RRuby"
	
	Execute(ecn .. " " .. message)
end

-- Diamond dropped trigger text
function diamondOC(name, line, args)
	recipient = args.PlayerName
	ecn = getAliasName()
	leader_name = gmcp("char.base.name")
	
	message = recipient .. ", please give " .. leader_name .. " the @RDiamond @Wand the @RRune"
	
	Execute(ecn .. " " .. message)
end

-- Announce the gate down
function gateAlert(name, line, args)
	ecn = getAliasName()
	mobKilled = args.MobName
	
	if mobKilled == "Lai" then gate = "EAST"
	elseif mobKilled == "Joshua" then gate = "SOUTH"
	elseif mobKilled == "The spirit of Sherizai" then gate = "WEST"
	elseif mobKilled == "Arizan" then gate = "NORTH"
	else gate = "ERROR" 
	end
  	
	message = "ALERT: " .. gate .. " GATE DOWN"
	
	Execute(ecn .. " " .. message)
end

-- Announce directions for wearing signet and bowing
function sigBow()
	ecn = getAliasName()
	message = "All wear signet now. command: @Rbow arb"
	
	Execute(ecn .. " " .. message)
end

-- Anounce to move "DOWN"
function goDown()
	ecn = getAliasName()
	message = "Command: @RDOWN"
	
	Execute(ecn .. " " .. message)
end

-- Hunt the mob!
function huntMob()
	EnableTrigger("huntOCTrigger", true)
	Execute("hunt warhorse")
end

-- Rename the group!
function groupRename(name, line, args)
	huntDir = args.Direction
	huntDir = string.upper(string.sub(huntDir,1,1))
	EnableTrigger("huntOCTrigger", false)
	
	if groupName == nil then 
		groupName = "NAPS:EDNDS:" .. huntDir
	else
		groupName = groupName .. huntDir
	end
	
	Execute("group rename " .. groupName)
end

-- Helper Function - Tell the user how this shit works!
function helpOC()

	Note()

	ColourNote("gray", "", string.rep("-", 80))
	ColourNote("#32a83e", "", "[", "#3254a8", "", "Oradrin's Chosen Helper", "#32a83e", "", "]")
	ColourNote("gray", "", string.rep("-", 80))
	ColourNote("white", "", "This plugin will basically run OC for you!")
	ColourNote("white", "", "")
	ColourNote("white", "", "The triggers are DISABLED by default, and you can enable and disable them with a command")
	ColourNote("white", "", "")	
	ColourNote("green", "", "oc help", "white", "", " - Brings up this help menu")
	ColourNote("green", "", "oc enable", "white", "", " - Enables the triggers for this plugin")
	ColourNote("green", "", "oc disable", "white", "", " - Disables the triggers for this plugin")
	ColourNote("green", "", "oc check", "white", "", " - Checks if the plugin triggers are enabled/disabled")
	ColourNote("green", "", "oc hunt", "white", "", " - Finds the next direction in the maze and renames group")	
	ColourNote("green", "", "oc newbie", "white", "", " - Sends the OC Newbie text to the group")
	ColourNote("green", "", "oc start", "white", "", " - create and name the OC group, and broadcast")
	ColourNote("green", "", "oc finish", "white", "", " - Sends the OC Finished text to the group")
	ColourNote("green", "", "oc ecn", "white", "", " - Shows your current epic talk alias")
	ColourNote("green", "", "oc ecn <youralias>", "white", "", " - Sets your epic talk alias to <youralias>")
	ColourNote("white", "", "")
	ColourNote("Yellow", "", "This plugin is freely shareable with any epic leader!  Share the joy, ya'll!")
	ColourNote("gray", "", string.rep("-", 80))

	Note()

end

-- Wait a little bit (not long) after install and show the help!
function OnPluginInstall()
	DoAfterSpecial(.2, "helpOC()", 12)
end

]]>

</script>


</muclient>